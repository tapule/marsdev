MARSBIN  = $(MARSDEV)/m68k-elf/bin
TOOLSBIN = $(MARSDEV)/bin

CC      = $(MARSBIN)/m68k-elf-gcc 
AR      = $(MARSBIN)/m68k-elf-ar 
RANLIB  = $(MARSBIN)/m68k-elf-ranlib 
OBJC    = $(MARSBIN)/m68k-elf-objcopy 
ASMZ80  = $(TOOLSBIN)/sjasm

BINTOS  = $(TOOLSBIN)/bintos
RESCOMP = $(TOOLSBIN)/rescomp
XGMTOOL = $(TOOLSBIN)/xgmtool
WAVTORAW= $(TOOLSBIN)/wavtoraw
PCMTORAW= $(TOOLSBIN)/pcmtoraw
SIZEBND = $(TOOLSBIN)/sizebnd
LZ4W    = $(TOOLSBIN)/lz4w.jar

# Use rescomp jar for SGDK > 1.33
ifneq ("$(wildcard $(TOOLSBIN)/rescomp.jar)","")
	RESCOMP = java -jar $(TOOLSBIN)/rescomp.jar
	WAVTORAW = @echo "wavtoraw no longer available!" ## 
	PCMTORAW = @echo "pcmtoraw no longer available!" ## 
endif

LIBMD   = $(MARSDEV)/m68k-elf/lib/libmd.a

GCC_VER = $(shell $(CC) -dumpversion)
PLUGIN  = $(MARSDEV)/m68k-elf/libexec/gcc/m68k-elf/$(GCC_VER)
LTO_SO  = liblto_plugin.so
ifeq ($(OS),Windows_NT)
	LTO_SO = liblto_plugin-0.dll
endif

INCS     = -Iinc -Ires
FLAGS    = -m68000 -fno-web -fno-gcse -fno-unit-at-a-time -fshort-enums -fno-builtin -fcommon
FLAGSZ80 = -isrc -iinc
OPTIONS  = 

CS   = $(wildcard src/*.c)
SS   = $(wildcard src/*.s)
S80S = $(wildcard src/*.s80)
RESS = $(wildcard res/*.res)

RESOURCES  = $(RESS:.res=.o)
RESOURCES += $(CS:.c=.o)
RESOURCES += $(SS:.s=.o)
RESOURCES += $(S80S:.s80=.o)

.PHONY: all release debug clean

all: release 

release: OPTIONS = -O3 -flto -fuse-linker-plugin -fomit-frame-pointer
release: $(RESOURCES) libmd.a

debug: OPTIONS = -DDEBUG -Og -g
debug: $(RESOURCES) libmd-debug.a

%.a: $(RESOURCES)
	$(AR) rs --plugin=$(PLUGIN)/$(LTO_SO) $@ $(RESOURCES)

%.o80: %.s80 
	$(ASMZ80) $(FLAGSZ80) $< $@ out.lst 

%.s: %.o80 
	$(BINTOS) $< 

%.o: %.c 
	$(CC) $(OPTIONS) $(FLAGS) $(INCS) -c $< -o $@

%.o: %.s 
	$(CC) -x assembler-with-cpp -MMD $(OPTIONS) $(FLAGS) $(INCS) -c $< -o $@

%.s: %.res
	$(RESCOMP) $< $@

clean:
	rm -f $(RESOURCES) libmd.a libmd-debug.a
	rm -rf *.o *.a *.o80 *.log *.lst 
